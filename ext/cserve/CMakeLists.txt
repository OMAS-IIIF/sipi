cmake_minimum_required(VERSION 3.19)
project(cserve_builder C CXX)
include(ExternalProject)

project(sipi VERSION 1.1)


ExternalProject_Add(project_cserve
        INSTALL_DIR ${COMMON_LOCAL}
        GIT_REPOSITORY https://github.com/OMAS-IIIF/cserve.git
        SOURCE_DIR ${COMMON_SRCS}/cserve
        CMAKE_ARGS -DMAKE_SHARED_CSERVE:BOOL=${MAKE_SHARED_SIPI}
        -DCMAKE_PREFIX_PATH=${COMMON_LOCAL}
        -DCMAKE_INSTALL_PREFIX=${COMMON_LOCAL}
        -DCMAKE_INSTALL_LIBDIR=${CONFIGURE_LIBDIR}
        ${OS_X_SPECIAL_FLAG})
ExternalProject_Get_Property(project_cserve install_dir)

if(MAKE_SHARED_SIPI)
    add_library(cserve SHARED IMPORTED GLOBAL)
    set_property(TARGET cserve PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/libcurl${CMAKE_SHARED_LIBRARY_SUFFIX})
    add_library(curl SHARED IMPORTED GLOBAL)
    set_property(TARGET curl PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/libcurl${CMAKE_SHARED_LIBRARY_SUFFIX})
    add_library(bz2 SHARED IMPORTED GLOBAL)
    set_property(TARGET bz2 PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/libbz2${CMAKE_SHARED_LIBRARY_SUFFIX})
    add_library(Catch2 SHARED IMPORTED GLOBAL)
    set_property(TARGET Catch2 PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/libCatch2${CMAKE_SHARED_LIBRARY_SUFFIX})
    add_library(Catch2Main SHARED IMPORTED GLOBAL)
    set_property(TARGET Catch2Main PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/libCatch2Main${CMAKE_SHARED_LIBRARY_SUFFIX})
    add_library(crypto SHARED IMPORTED GLOBAL)
    set_property(TARGET crypto PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/libcrypto${CMAKE_SHARED_LIBRARY_SUFFIX})
    #add_library(curl SHARED IMPORTED GLOBAL)
    set_property(TARGET curl PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/libcurl${CMAKE_SHARED_LIBRARY_SUFFIX})
    add_library(lua SHARED IMPORTED GLOBAL)
    set_property(TARGET lua PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/liblua${CMAKE_SHARED_LIBRARY_SUFFIX})
    add_library(lzma SHARED IMPORTED GLOBAL)
    set_property(TARGET lzma PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/liblzma${CMAKE_SHARED_LIBRARY_SUFFIX})
    add_library(magic SHARED IMPORTED GLOBAL)
    set_property(TARGET magic PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/libmagic${CMAKE_SHARED_LIBRARY_SUFFIX})
    add_library(spdlog SHARED IMPORTED GLOBAL)
    set_property(TARGET spdlog PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/libspdlog${CMAKE_SHARED_LIBRARY_SUFFIX})
    add_library(sqlite3 SHARED IMPORTED GLOBAL)
    set_property(TARGET sqlite3 PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/libsqlite3${CMAKE_SHARED_LIBRARY_SUFFIX})
    add_library(ssl SHARED IMPORTED GLOBAL)
    set_property(TARGET ssl PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/libssl${CMAKE_SHARED_LIBRARY_SUFFIX})
    add_library(z SHARED IMPORTED GLOBAL)
    set_property(TARGET z PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/libz${CMAKE_SHARED_LIBRARY_SUFFIX})
else()
    add_library(cserve STATIC IMPORTED GLOBAL)
    set_property(TARGET cserve PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/libcserve${CMAKE_STATIC_LIBRARY_SUFFIX})
    add_library(curl STATIC IMPORTED GLOBAL)
    set_property(TARGET curl PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/libcurl${CMAKE_STATIC_LIBRARY_SUFFIX})
    add_library(bz2 STATIC IMPORTED GLOBAL)
    set_property(TARGET bz2 PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/libbz2${CMAKE_STATIC_LIBRARY_SUFFIX})
    add_library(Catch2 STATIC IMPORTED GLOBAL)
    set_property(TARGET Catch2 PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/libCatch2${CMAKE_STATIC_LIBRARY_SUFFIX})
    add_library(Catch2Main STATIC IMPORTED GLOBAL)
    set_property(TARGET Catch2Main PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/libCatch2Main${CMAKE_STATIC_LIBRARY_SUFFIX})
    add_library(crypto STATIC IMPORTED GLOBAL)
    set_property(TARGET crypto PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/libcrypto${CMAKE_STATIC_LIBRARY_SUFFIX})
    #add_library(curl STATIC IMPORTED GLOBAL)
    set_property(TARGET curl PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/libcurl${CMAKE_STATIC_LIBRARY_SUFFIX})
    add_library(lua STATIC IMPORTED GLOBAL)
    set_property(TARGET lua PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/liblua${CMAKE_STATIC_LIBRARY_SUFFIX})
    add_library(lzma STATIC IMPORTED GLOBAL)
    set_property(TARGET lzma PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/liblzma${CMAKE_STATIC_LIBRARY_SUFFIX})
    add_library(magic STATIC IMPORTED GLOBAL)
    set_property(TARGET magic PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/libmagic${CMAKE_STATIC_LIBRARY_SUFFIX})
    add_library(spdlog STATIC IMPORTED GLOBAL)
    set_property(TARGET spdlog PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/libspdlog${CMAKE_STATIC_LIBRARY_SUFFIX})
    add_library(sqlite3 STATIC IMPORTED GLOBAL)
    set_property(TARGET sqlite3 PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/libsqlite3${CMAKE_STATIC_LIBRARY_SUFFIX})
    add_library(ssl STATIC IMPORTED GLOBAL)
    set_property(TARGET ssl PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/libssl${CMAKE_STATIC_LIBRARY_SUFFIX})
    add_library(z STATIC IMPORTED GLOBAL)
    set_property(TARGET z PROPERTY IMPORTED_LOCATION ${CONFIGURE_LIBDIR}/libz${CMAKE_STATIC_LIBRARY_SUFFIX})

endif()
add_dependencies(cserve project_curl)

# get current date and time
string(TIMESTAMP BUILD_TIMESTAMP "%Y-%m-%d %H:%M")
MESSAGE( STATUS "Build timestamp: ${BUILD_TIMESTAMP}" )
